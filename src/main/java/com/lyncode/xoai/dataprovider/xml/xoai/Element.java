//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.06.27 at 01:16:00 PM WEST 
//

package com.lyncode.xoai.dataprovider.xml.xoai;

import com.lyncode.xoai.dataprovider.exceptions.WritingXmlException;
import com.lyncode.xoai.dataprovider.xml.XMLWritable;
import com.lyncode.xoai.dataprovider.xml.XmlOutputContext;

import javax.xml.bind.annotation.*;
import javax.xml.stream.XMLStreamException;
import java.util.ArrayList;
import java.util.List;

import static com.lyncode.xoai.util.XmlIOUtils.writeElement;

/**
 *
 * Java class for Element complex type.
 *
 *
 * The following schema fragment specifies the expected content contained within
 * this class.
 *





















 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Element", propOrder = {"field", "element"})
public class Element implements XMLWritable {

    protected List<Element.Field> field;
    protected List<Element> element;
    @XmlAttribute(required = true)
    protected String name;

    /**
     * Gets the value of the field property.
     *
     *
     * This accessor method returns a reference to the live list, not a
     * snapshot. Therefore any modification you make to the returned list will
     * be present inside the JAXB object. This is why there is not a
      method for the field property.
     *
     *
     * For example, to add a new item, do as follows:
     *

     * getField().add(newItem);

     *
     *
     *
     * Objects of the following type(s) are allowed in the list
     * ;
     */
    public List<Element.Field> getField() {
        if (field == null) {
            field = new ArrayList<Element.Field>();
        }
        return this.field;
    }

    /**
     * Gets the value of the element property.
     *
     *
     * This accessor method returns a reference to the live list, not a
     * snapshot. Therefore any modification you make to the returned list will
     * be present inside the JAXB object. This is why there is not a
      method for the element property.
     *
     *
     * For example, to add a new item, do as follows:
     *

     * getElement().add(newItem);

     *
     *
     *
     * Objects of the following type(s) are allowed in the list ;
     */
    public List<Element> getElement() {
        if (element == null) {
            element = new ArrayList<Element>();
        }
        return this.element;
    }

    /**
     * Gets the value of the name property.
     *
     * @return possible object is ;
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     *
     * @param value allowed object is ;
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     *
     * Java class for anonymous complex type.
     *
     *
     * The following schema fragment specifies the expected content contained
     * within this class.
     *









     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {"value"})
    public static class Field implements XMLWritable {

        @XmlValue
        protected String value;
        @XmlAttribute
        protected String name;

        /**
         * Gets the value of the value property.
         *
         * @return possible object is ;
         */
        public String getValue() {
            return value;
        }

        /**
         * Sets the value of the value property.
         *
         * @param value allowed object is ;
         */
        public void setValue(String value) {
            this.value = value;
        }

        /**
         * Gets the value of the name property.
         *
         * @return possible object is ;
         */
        public String getName() {
            return name;
        }

        /**
         * Sets the value of the name property.
         *
         * @param value allowed object is ;
         */
        public void setName(String value) {
            this.name = value;
        }


        @Override
        public void write(XmlOutputContext writer) throws WritingXmlException {
            try {
                if (this.name != null)
                    writer.getWriter().writeAttribute("name", this.getName());

                if (this.value != null)
                    writer.getWriter().writeCharacters(value);

            } catch (XMLStreamException e) {
                throw new WritingXmlException(e);
            }
        }

    }

    @Override
    public void write(XmlOutputContext context) throws WritingXmlException {
        try {
            if (this.name != null)
                context.getWriter().writeAttribute("name", this.getName());

            for (Field f : this.getField())
                writeElement(context, "field", f);

            for (Element e : this.getElement())
                writeElement(context, "element", e);

        } catch (XMLStreamException e) {
            throw new WritingXmlException(e);
        }

    }

}
